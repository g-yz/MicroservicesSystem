-- ACCOUNT SERVICE

IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'accounts_service')
BEGIN
    CREATE DATABASE accounts_service;
END
GO

USE accounts_service;
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'type_accounts')
BEGIN
	CREATE TABLE type_accounts (
	  id INT IDENTITY(1,1) PRIMARY KEY,
	  description VARCHAR(50) NOT NULL
	)
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'type_movements')
BEGIN
	CREATE TABLE type_movements (
	  id INT IDENTITY(1,1) PRIMARY KEY,
	  description VARCHAR(50) NOT NULL
	)
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'accounts')
BEGIN
	CREATE TABLE accounts (
	  id UNIQUEIDENTIFIER DEFAULT NEWID() PRIMARY KEY,
	  account_number VARCHAR(20) NOT NULL,
	  opening_balance DECIMAL(19,4) NOT NULL DEFAULT 0,
	  type_account_id INT NOT NULL,
	  status BIT NOT NULL,
	  client_id UNIQUEIDENTIFIER NOT NULL
	)
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'movements')
BEGIN
	CREATE TABLE movements (
	  id UNIQUEIDENTIFIER DEFAULT NEWID() PRIMARY KEY,
	  value DECIMAL(19,4) NOT NULL DEFAULT 0,
	  balance DECIMAL(19,4) NOT NULL DEFAULT 0,
	  date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	  type_movement_id INT NOT NULL,
	  account_id UNIQUEIDENTIFIER NOT NULL
	)
END
GO

ALTER TABLE accounts ADD FOREIGN KEY (type_account_id) REFERENCES type_accounts (id)
GO

ALTER TABLE movements ADD FOREIGN KEY (account_id) REFERENCES accounts (id)
GO

ALTER TABLE movements ADD FOREIGN KEY (type_movement_id) REFERENCES type_movements (id)
GO

-- Redundance

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'clients')
BEGIN
	CREATE TABLE clients (
	  id UNIQUEIDENTIFIER DEFAULT NEWID() PRIMARY KEY,
	  full_name varchar(100) NOT NULL,
	  status BIT NOT NULL
	)
END
GO

ALTER TABLE accounts ADD FOREIGN KEY (client_id) REFERENCES clients (id)
GO
